---
- name: Deploy Kubernetes Cluster
  hosts: k8s
  gather_facts: yes
  vars:
    k8s_pod_network: "192.168.192.0/18"
    k8s_user: "ansible"
    k8s_user_home: "/home/{{ k8s_user }}"
    k8s_token_file: "join-k8s-command"
    k8s_admin_config: "/etc/kubernetes/admin.conf"
    k8s_dashboard_adminuser_config: "dashboard-adminuser.yaml"
    k8s_kubelet_config: "/etc/kubernetes/kubelet.conf"
    k8s_dashboard_port: "6443"
    k8s_dashboard_url: "https://{{ ansible_default_ipv4.address }}:{{ k8s_dashboard_port }}/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/#!/login"
    calico_rbac_url: "https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/rbac-kdd.yaml"
    calico_rbac_config: "rbac-kdd.yaml"
    calico_net_url: "https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml"
    calico_net_config: "calico.yaml"
    dashboard_url: "https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml"
    dashboard_config: "kubernetes-dashboard.yml"
  tasks:
  - name: Debian | Configure K8S Master Block
    block:
    - name: Debian | Initialise the Kubernetes cluster using kubeadm
      become: true
      command: kubeadm init --pod-network-cidr={{ k8s_pod_network }}
      args:
        creates: "{{ k8s_admin_config }}"

    - name: Debian | Setup kubeconfig for {{ k8s_user }} user
      file:
        path: "{{ k8s_user_home }}/.kube"
        state: directory
        owner: "{{ k8s_user }}"
        group: "{{ k8s_user }}"
        mode: "0750"
    
    - name: Debian | Copy {{ k8s_admin_config }}
      become: true
      copy:
        src: "{{ k8s_admin_config }}"
        dest: "{{ k8s_user_home }}/.kube/config"
        owner: "{{ k8s_user }}"
        group: "{{ k8s_user }}"
        mode: "0640"
        remote_src: yes
    
    - name: Debian | Download {{ calico_rbac_url }}
      get_url:
        url: "{{ calico_rbac_url }}"
        dest: "{{ k8s_user_home }}/{{ calico_rbac_config }}"
        owner: "{{ k8s_user }}"
        group: "{{ k8s_user }}"
        mode: "0640"
    
    - name: Debian | Download {{ calico_net_url }}
      get_url:
        url: "{{ calico_net_url }}"
        dest: "{{ k8s_user_home }}/{{ calico_net_config }}"
        owner: "{{ k8s_user }}"
        group: "{{ k8s_user }}"
        mode: "0640"     

    - name: Debian | Set CALICO_IPV4POOL_CIDR to {{ k8s_pod_network }}
      replace:
        path: "{{ k8s_user_home }}/{{ calico_net_config }}"
        regexp: "192.168.0.0/16"
        replace: "{{ k8s_pod_network }}"
    
    - name: Debian | Download {{ dashboard_url }}
      get_url:
        url: "{{ dashboard_url }}"
        dest: "{{ k8s_user_home }}/{{ dashboard_config }}"
        owner: "{{ k8s_user }}"
        group: "{{ k8s_user }}"
        mode: "0640"     
    
    - name: Debian | Install calico pod network {{ calico_rbac_config }}
      become: false
      command: kubectl apply -f "{{ k8s_user_home }}/{{ calico_rbac_config }}"
    
    - name: Debian | Install calico pod network {{ calico_net_config }}
      become: false
      command: kubectl apply -f "{{ k8s_user_home }}/{{ calico_net_config }}"
    
    - name: Debian | Install K8S dashboard {{ dashboard_config }}
      become: false
      command: kubectl apply -f "{{ k8s_user_home }}/{{ dashboard_config }}"
    
    - name: Debian | Create service account
      become: false
      command: kubectl create serviceaccount dashboard -n default
      ignore_errors: yes
    
    - name: Debian | Create cluster role binding dashboard-admin
      become: false
      command: kubectl create clusterrolebinding dashboard-admin -n default --clusterrole=cluster-admin --serviceaccount=default:dashboard
      ignore_errors: yes
    
    - name: Debian | Create {{ k8s_dashboard_adminuser_config }} for service account
      copy:
        src: "files/{{ k8s_dashboard_adminuser_config }}"
        dest: "{{ k8s_user_home }}/{{ k8s_dashboard_adminuser_config }}"
        owner: "{{ k8s_user }}"
        group: "{{ k8s_user }}"
        mode: "0640"
    
    - name: Debian | Create service account
      become: false
      command: kubectl apply -f "{{ k8s_user_home }}/{{ k8s_dashboard_adminuser_config }}"
      ignore_errors: yes
    
    - name: Debian | Create cluster role binding cluster-system-anonymous
      become: false
      command: kubectl create clusterrolebinding cluster-system-anonymous --clusterrole=cluster-admin --user=system:anonymous
      ignore_errors: yes
    
    - name: Debian | Test K8S dashboard and wait for HTTP 200
      uri:
        url: "{{ k8s_dashboard_url }}"
        status_code: 200
        validate_certs: no
      ignore_errors: yes
      register: result_k8s_dashboard_page
      retries: 10
      delay: 6
      until: result_k8s_dashboard_page is succeeded

    - name: Debian | K8S dashboard URL
      debug:
        var: k8s_dashboard_url
    
    - name: Debian | Generate join command
      command: kubeadm token create --print-join-command
      register: join_command
    
    - name: Debian | Copy join command to local file
      become: false
      local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="{{ k8s_token_file }}"
    when: "'k8s-master' in group_names"

  - name: Debian | Configure K8S Node Block
    block:
    - name: Debian | Copy {{ k8s_token_file }} to server location
      copy: 
        src: "{{ k8s_token_file }}"
        dest: "{{ k8s_user_home }}/{{ k8s_token_file }}.sh"
        owner: "{{ k8s_user }}"
        group: "{{ k8s_user }}"
        mode: "0750"

    - name: Debian | Join the node to cluster unless file {{ k8s_kubelet_config }} exists
      become: true
      command: sh "{{ k8s_user_home }}/{{ k8s_token_file }}.sh"
      args:
        creates: "{{ k8s_kubelet_config }}"
    when: "'k8s-node' in group_names"
...
